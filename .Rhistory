baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(y ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
teste <- previsao_NU_NOTA_CN(nota, VariavelMutavel[1])
previsao_NU_NOTA_CN <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_CN ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_CH <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_CH ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_LC <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_LC ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_REDACAO <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_REDACAO ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_COMP2 <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP2 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_COMP3 <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP3 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_COMP5 <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP5 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_COMP4 <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP4 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_NU_NOTA_COMP1 <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP1 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
previsao_Q027 <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(Q027 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
teste1 <- previsao_NU_NOTA_CN(nota, VariavelMutavel[1])
teste2 <- previsao_NU_NOTA_CH(nota, VariavelMutavel[2])
teste3 <- previsao_NU_NOTA_LC(nota, VariavelMutavel[3])
teste4 <- previsao_NU_NOTA_REDACAO(nota, VariavelMutavel[4])
teste5 <- previsao_NU_NOTA_COMP2(nota, VariavelMutavel[5])
teste6 <- previsao_NU_NOTA_COMP3(nota, VariavelMutavel[6])
teste7 <- previsao_NU_NOTA_COMP5(nota, VariavelMutavel[7])
teste8 <- previsao_NU_NOTA_COMP4(nota, VariavelMutavel[8])
teste9 <- previsao_NU_NOTA_COMP1(nota, VariavelMutavel[9])
teste10 <- previsao_NU_NOTA_Q027(nota, VariavelMutavel[10])
VariavelMutavel[10]
previsao_Q027 <- function(x, y){
variaveis <-  c("NU_INSCRICAO", paste("", y, sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- x[,variaveis]
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(Q027 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTesteVariavel)
baseTesteVariavel[2] <- previsao
notasVariavel <- rbind(baseTreinoVariavel[,1:2], baseTesteVariavel[,1:2])
return(notasVariavel)
}
teste10 <- previsao_NU_NOTA_Q027(nota, VariavelMutavel[10])
teste10 <- previsao_Q027(nota, VariavelMutavel[10])
reconstrucaoDataSet <- cbind(teste1, teste2, teste3, teste4, teste5, teste6, teste7, teste8 teste9, teste10)
reconstrucaoDataSet <- merge(teste1, teste2, teste3, teste4, teste5, teste6, teste7, teste8 teste9, teste10)
View(teste1)
reconstrucaoDataSet <- left_join(teste1, teste2, teste3, teste4, teste5, teste6, teste7, teste8 teste9, teste10)
teste1 %>% left_join(teste2)
reconstrucaoDataSet <- teste1 %>% left_join(teste2)
reconstrucaoDataSet <- teste1 %>% left_join(teste2, teste3)
reconstrucaoDataSet <- c(teste1, teste2, teste3, teste4, teste5, teste6, teste7, teste8 teste9, teste10)
reconstrucaoDataSet <- merge.data.frame(teste1, teste2, teste3, teste4, teste5, teste6, teste7, teste8 teste9, teste10)
reconstrucaoDataSet <- left_join(teste1, teste2)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste3)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste4)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste5)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste6)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste7)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste8)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste9)
reconstrucaoDataSet <- reconstrucaoDataSet %>% left_join(teste10)
View(reconstrucaoDataSet)
setwd("~/pCloudDrive/Profissional/ciencia-de-dados/codenation.dev/desafio_nota_do_enem")
library(randomForest) # MODELO RANDONFOREST
library(dplyr)
VariavelMutavel <- c("NU_NOTA_CN", "NU_NOTA_CH", "NU_NOTA_LC", "NU_NOTA_REDACAO", "NU_NOTA_COMP2", "NU_NOTA_COMP3", "NU_NOTA_COMP5", "NU_NOTA_COMP4", "NU_NOTA_COMP1", "Q027")
nota <- read.csv("train.csv")
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[1], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_CN ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 60 % Redação
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[2], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_CH ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
nota <- read.csv("train.csv")
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[3], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_LC ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
# 87 % Ciencias Humanas
#
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[4], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_REDACAO ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[5], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP2 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
# 86 % Ciencias Humanas
# 89 % Linguagens e Códigos
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[6], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP3 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
# 86 % Ciencias Humanas
# 89 % Linguagens e Códigos
# 60 % Redação
# 98 % Computação 2
#
nota <- read.csv("train.csv")
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[7], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP5 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
# 86 % Ciencias Humanas
nota <- read.csv("train.csv")
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[8], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP4 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
nota <- read.csv("train.csv")
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[9], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_COMP1 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
nota <- read.csv("train.csv")
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[10], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(Q027 ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
# 90 % Ciencias da Natureza
# 86 % Ciencias Humanas
# 89 % Linguagens e Códigos
# 60 % Redação
# 98 % Computação 2
# 98 % Computação 3
# 99 % Computação 5
# 98 % Computação 4
# 97 % Computação 1
nota <- read.csv("train.csv")
variaveis <-  c("NU_INSCRICAO", paste("", VariavelMutavel[1], sep = ""), "Q006", "TP_ESCOLA", "Q047", "CO_UF_RESIDENCIA", "TP_SEXO", "Q001", "Q024", "NU_IDADE")
baseVariavelTotal <- nota[,variaveis]
glimpse(baseVariavelTotal)
teste <- as.data.frame(sapply(baseVariavelTotal[,1:ncol(baseVariavelTotal)], as.numeric))
teste$NU_INSCRICAO <- baseVariavelTotal$NU_INSCRICAO
baseVariavelTotal <- teste
rm(teste)
baseTreinoVariavel <- baseVariavelTotal %>% filter(!is.na(baseVariavelTotal[[2]]))
baseTesteVariavel <- baseVariavelTotal %>% filter(is.na(baseVariavelTotal[[2]]))
model <- randomForest(NU_NOTA_CN ~ . ,
data = baseTreinoVariavel[2:ncol(baseTreinoVariavel)],
ntree = 600,
nodesize = 50)
previsao = predict(model, baseTreinoVariavel)
enviotree = data.frame(baseTreinoVariavel$NU_INSCRICAO)
enviotree$nomeDaVariavel = previsao
colnames(enviotree) <- c("NU_INSCRICAO", sprintf("%s", VariavelMutavel[1]))
result <- data.frame(Actual=baseTreinoVariavel[2],Predicted=previsao)
result$Difference <- abs(result[1] - result$Predicted)
#summary(result$Difference)
sprintf("%s percentual de erro até a margem média dos erros", round(nrow(result %>% filter(Difference < 93))/nrow(result)*100, 2))
View(baseVariavelTotal)
